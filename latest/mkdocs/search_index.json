{
    "docs": [
        {
            "location": "/", 
            "text": "TimeAxisArrays.jl\n\n\nA convenience wrapper around AxisArrays.jl for working with time series data\n\n\nTimeAxisArrays.jl augments \nAxisArrays.jl\n with functionality for time series analysis. A \nTimeAxisArray\n is simply an \nAxisArray\n with the first axis constrained to be dimensional and labelled \n:Timestamp\n, and all remaining axes categorical. It inherits all \nAxisArray\n functionality such as indexing, merging and joining, and math and logic operations, while gaining additional functionality for common time series operations such as temporal downsampling, differencing, lead, and lag.\n\n\nThis package is currently a work-in-progress and so is unregistered - to install, first install \nAxisArrays.jl\n (which is also unregistered) and run:\n\n\njulia\n Pkg.clone(\nhttps://github.com/GordStephen/TimeAxisArrays.jl\n)\n\n\n\n\n\n\nContents\n\n\n\n\nGetting Started\n\n\nCreating TimeAxisArrays\n\n\nIndexing\n\n\n\n\n\n\nCombing multiple TimeAxisArrays\n\n\nCombining on existing axes\n\n\nCombining into a new axis\n\n\n\n\n\n\nSplitting, collapsing, and downsampling on timestamps\n\n\nSplitting\n\n\nCollapsing\n\n\nDownsampling\n\n\n\n\n\n\nOther time series utilities\n\n\nRolling reductions\n\n\nLead and lag\n\n\nAbsolute and percent differencing\n\n\nDropping timestamps\n\n\n\n\n\n\nFile IO\n\n\nReading from disk\n\n\nWriting to disk", 
            "title": "Home"
        }, 
        {
            "location": "/#timeaxisarraysjl", 
            "text": "A convenience wrapper around AxisArrays.jl for working with time series data  TimeAxisArrays.jl augments  AxisArrays.jl  with functionality for time series analysis. A  TimeAxisArray  is simply an  AxisArray  with the first axis constrained to be dimensional and labelled  :Timestamp , and all remaining axes categorical. It inherits all  AxisArray  functionality such as indexing, merging and joining, and math and logic operations, while gaining additional functionality for common time series operations such as temporal downsampling, differencing, lead, and lag.  This package is currently a work-in-progress and so is unregistered - to install, first install  AxisArrays.jl  (which is also unregistered) and run:  julia  Pkg.clone( https://github.com/GordStephen/TimeAxisArrays.jl )", 
            "title": "TimeAxisArrays.jl"
        }, 
        {
            "location": "/#contents", 
            "text": "Getting Started  Creating TimeAxisArrays  Indexing    Combing multiple TimeAxisArrays  Combining on existing axes  Combining into a new axis    Splitting, collapsing, and downsampling on timestamps  Splitting  Collapsing  Downsampling    Other time series utilities  Rolling reductions  Lead and lag  Absolute and percent differencing  Dropping timestamps    File IO  Reading from disk  Writing to disk", 
            "title": "Contents"
        }
    ]
}