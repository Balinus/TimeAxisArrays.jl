{
    "docs": [
        {
            "location": "/", 
            "text": "TimeAxisArrays.jl\n\n\nA convenience wrapper around AxisArrays.jl for working with time series data\n\n\nTimeAxisArrays.jl augments \nAxisArrays.jl\n with functionality for time series analysis. A \nTimeAxisArray\n is simply an \nAxisArray\n with the first axis constrained to be dimensional and labelled \n:Timestamp\n, and all remaining axes categorical. It inherits all \nAxisArray\n functionality such as indexing, merging and joining, and math and logic operations, while gaining additional functionality for common time series operations such as temporal downsampling, differencing, lead, and lag.\n\n\nThis package is currently a work-in-progress and so is unregistered - to install, first install \nAxisArrays.jl\n (which is also unregistered) and run:\n\n\njulia\n Pkg.clone(\nhttps://github.com/GordStephen/TimeAxisArrays.jl\n)\n\n\n\n\n\n\nUser Guide\n\n\n\n\nGetting Started\n\n\nCreating TimeAxisArrays\n\n\nIndexing\n\n\n\n\n\n\nCombing multiple TimeAxisArrays\n\n\nCombining on existing axes\n\n\nCombining into a new axis\n\n\n\n\n\n\nSplitting, collapsing, and downsampling on timestamps\n\n\nSplitting\n\n\nCollapsing\n\n\nDownsampling\n\n\n\n\n\n\nOther time series utilities\n\n\nRolling reductions\n\n\nLead and lag\n\n\nAbsolute and percent differencing\n\n\nDropping timestamps\n\n\n\n\n\n\nFile IO\n\n\nReading from disk\n\n\nWriting to disk", 
            "title": "Home"
        }, 
        {
            "location": "/#timeaxisarraysjl", 
            "text": "A convenience wrapper around AxisArrays.jl for working with time series data  TimeAxisArrays.jl augments  AxisArrays.jl  with functionality for time series analysis. A  TimeAxisArray  is simply an  AxisArray  with the first axis constrained to be dimensional and labelled  :Timestamp , and all remaining axes categorical. It inherits all  AxisArray  functionality such as indexing, merging and joining, and math and logic operations, while gaining additional functionality for common time series operations such as temporal downsampling, differencing, lead, and lag.  This package is currently a work-in-progress and so is unregistered - to install, first install  AxisArrays.jl  (which is also unregistered) and run:  julia  Pkg.clone( https://github.com/GordStephen/TimeAxisArrays.jl )", 
            "title": "TimeAxisArrays.jl"
        }, 
        {
            "location": "/#user-guide", 
            "text": "Getting Started  Creating TimeAxisArrays  Indexing    Combing multiple TimeAxisArrays  Combining on existing axes  Combining into a new axis    Splitting, collapsing, and downsampling on timestamps  Splitting  Collapsing  Downsampling    Other time series utilities  Rolling reductions  Lead and lag  Absolute and percent differencing  Dropping timestamps    File IO  Reading from disk  Writing to disk", 
            "title": "User Guide"
        }, 
        {
            "location": "/man/getting-started/", 
            "text": "Getting Started\n\n\n\n\nCreating TimeAxisArrays\n\n\n\n\nIndexing", 
            "title": "Getting Started"
        }, 
        {
            "location": "/man/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting Started"
        }, 
        {
            "location": "/man/getting-started/#creating-timeaxisarrays", 
            "text": "", 
            "title": "Creating TimeAxisArrays"
        }, 
        {
            "location": "/man/getting-started/#indexing", 
            "text": "", 
            "title": "Indexing"
        }, 
        {
            "location": "/man/combining/", 
            "text": "Combing multiple TimeAxisArrays\n\n\n\n\nCombining on existing axes\n\n\n\n\nCombining into a new axis", 
            "title": "Combining TimeAxisArrays"
        }, 
        {
            "location": "/man/combining/#combing-multiple-timeaxisarrays", 
            "text": "", 
            "title": "Combing multiple TimeAxisArrays"
        }, 
        {
            "location": "/man/combining/#combining-on-existing-axes", 
            "text": "", 
            "title": "Combining on existing axes"
        }, 
        {
            "location": "/man/combining/#combining-into-a-new-axis", 
            "text": "", 
            "title": "Combining into a new axis"
        }, 
        {
            "location": "/man/downsampling/", 
            "text": "Splitting, collapsing, and downsampling on timestamps\n\n\n\n\nSplitting\n\n\n\n\nCollapsing\n\n\n\n\nDownsampling", 
            "title": "Splitting, collapsing, and downsampling on timestamps"
        }, 
        {
            "location": "/man/downsampling/#splitting-collapsing-and-downsampling-on-timestamps", 
            "text": "", 
            "title": "Splitting, collapsing, and downsampling on timestamps"
        }, 
        {
            "location": "/man/downsampling/#splitting", 
            "text": "", 
            "title": "Splitting"
        }, 
        {
            "location": "/man/downsampling/#collapsing", 
            "text": "", 
            "title": "Collapsing"
        }, 
        {
            "location": "/man/downsampling/#downsampling", 
            "text": "", 
            "title": "Downsampling"
        }, 
        {
            "location": "/man/other/", 
            "text": "Other time series utilities\n\n\n\n\nRolling reductions\n\n\n\n\nLead and lag\n\n\n\n\nAbsolute and percent differencing\n\n\n\n\nDropping timestamps", 
            "title": "Other time series tools"
        }, 
        {
            "location": "/man/other/#other-time-series-utilities", 
            "text": "", 
            "title": "Other time series utilities"
        }, 
        {
            "location": "/man/other/#rolling-reductions", 
            "text": "", 
            "title": "Rolling reductions"
        }, 
        {
            "location": "/man/other/#lead-and-lag", 
            "text": "", 
            "title": "Lead and lag"
        }, 
        {
            "location": "/man/other/#absolute-and-percent-differencing", 
            "text": "", 
            "title": "Absolute and percent differencing"
        }, 
        {
            "location": "/man/other/#dropping-timestamps", 
            "text": "", 
            "title": "Dropping timestamps"
        }, 
        {
            "location": "/man/file-io/", 
            "text": "File IO\n\n\n\n\nReading from disk\n\n\n\n\nWriting to disk", 
            "title": "File IO"
        }, 
        {
            "location": "/man/file-io/#file-io", 
            "text": "", 
            "title": "File IO"
        }, 
        {
            "location": "/man/file-io/#reading-from-disk", 
            "text": "", 
            "title": "Reading from disk"
        }, 
        {
            "location": "/man/file-io/#writing-to-disk", 
            "text": "", 
            "title": "Writing to disk"
        }, 
        {
            "location": "/lib/", 
            "text": "#\n\n\nBase.LinAlg.diff\n \n \nFunction\n.\n\n\ndiff(A::TimeAxisArray, k::Int=1)\n\n\n\n\nPerform \nk\nth order differencing across time observations in \nA\n.\n\n\n#\n\n\nBase.split\n \n \nMethod\n.\n\n\nsplit(A::TimeAxisArray, f::Function)\n\n\n\n\nReturns an array containing sequential fragments of \nA\n, split according to clusters of values in the mapping of \nf\n over the timestamps of \nA\n. \nsplit(f, A)\n is also defined so as to support do-notation.\n\n\n#\n\n\nTimeAxisArrays.collapse\n \n \nFunction\n.\n\n\ncollapse(A::TimeAxisArray, tsreducer::Function, reducer::Function=tsreducer)\n\n\n\n\nCollapses the timestamps of \nA\n to a single observation in the time dimension using \ntsreducer\n. Data is collapsed in the time dimension using \nreducer\n, which defaults to \ntsreducer\n.\n\n\n#\n\n\nTimeAxisArrays.downsample\n \n \nFunction\n.\n\n\ndownsample(A::TimeAxisArray, splitter::Function, tsreducer::Function, reducer::Function=tsreducer)\n\n\n\n\nCombines \nsplit\n, \ncollapse\n, and \nvcat\n to partition \nA\n according to sequential values in the mapping of \nsplitter\n over the timestamps of \nA\n, then collapses each of the split TimeAxisArrays according to \ntsreducer\n (for timestamps) and \nreducer\n (for data), before recombining the collapsed values.\n\n\n#\n\n\nTimeAxisArrays.dropif\n \n \nMethod\n.\n\n\ndropif(selector::Function, predicate::Function, A::TimeAxisArray)\n\n\n\n\nDrops observations at timestamps where \nselector\n (e.g. \nany\n, \nall\n) data values statisfy \npredicate\n.\n\n\n#\n\n\nTimeAxisArrays.dropnan\n \n \nFunction\n.\n\n\ndropnan(selector::Function, A::TimeAxisArray)\n\n\n\n\nDrops observations at timestamps where \nselector\n (e.g. \nany\n, \nall\n) data values are NaN. Equivalent to \ndropif(selector, isnan, A)\n\n\n#\n\n\nTimeAxisArrays.lag\n \n \nFunction\n.\n\n\nlag(A::TimeAxisArray, k::Int=1)\n\n\n\n\nShifts all observations in \nA\n later in time by \nk\n timestamps.\n\n\n#\n\n\nTimeAxisArrays.lead\n \n \nFunction\n.\n\n\nlead(A::TimeAxisArray, k::Int=1)\n\n\n\n\nShifts all observations in \nA\n earlier in time by \nk\n timestamps.\n\n\n#\n\n\nTimeAxisArrays.moving\n \n \nMethod\n.\n\n\nmoving(A::TimeAxisArray, reducer::Function, n::Int)\n\n\n\n\nApplies a time-wise reduction specified by \nreducer\n to a moving window of \nn\n observations, storing the result at the last timestamp in the window.\n\n\n#\n\n\nTimeAxisArrays.percentchange\n \n \nMethod\n.\n\n\npercentchange(A::TimeAxisArray; logdiff::Bool=false)\n\n\n\n\nComputes the percent change between observations in time in \nA\n. If \nlogdiff\n is true, returns the difference of log-transformed values.", 
            "title": "Function Reference"
        }
    ]
}